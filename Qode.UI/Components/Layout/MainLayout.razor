@using Microsoft.AspNetCore.Components.Authorization
@using Qode.UI.Components.Account
@inherits LayoutComponentBase

@inject NavigationManager Navigation

<MudThemeProvider @ref="@_mudThemeProvider" @bind-IsDarkMode="@_isDarkMode" Theme="_theme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar>
        <MudTooltip Text="List of circuits">
            @if (Navigation.ToBaseRelativePath(Navigation.Uri).StartsWith("Account"))
            {
                <NavLink class="mud-nav-link mud-nav-link-text" href="List">
                    <MudIconButton Icon="@Icons.Material.Filled.FormatListBulleted" Color="Color.Inherit" Edge="Edge.Start" />
                </NavLink>
            }
            else
            {
                <MudNavLink Href="List">
                    <MudIconButton Icon="@Icons.Material.Filled.FormatListBulleted" Color="Color.Inherit" Edge="Edge.Start" />
                </MudNavLink>
            }
        </MudTooltip>
        <MudText Typo="Typo.h4">
            @if (Navigation.ToBaseRelativePath(Navigation.Uri).StartsWith("Account"))
            {
                <NavLink class="mud-nav-link mud-nav-link-text" href="/">
                    Qode
                </NavLink>
            }
            else
            {
                <MudNavLink Href="/">
                    Qode
                </MudNavLink>
            }
        </MudText>
        <MudSpacer />
        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> @context.User.Identity?.Name
                </div>
                <div class="nav-item px-3">
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <button type="submit" class="nav-link">
                            <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                        </button>
                    </form>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3">
                    @if (Navigation.ToBaseRelativePath(Navigation.Uri).StartsWith("Account"))
                    {
                        <NavLink class="mud-nav-link mud-nav-link-text" href="Account/Register">
                            <MudText Typo="Typo.button">Register</MudText>
                        </NavLink>
                    }
                    else
                    {
                        <MudNavLink OnClick="@(() => Navigation.NavigateTo("Account/Register", true))">
                            <MudText Typo="Typo.button">Register</MudText>
                        </MudNavLink>
                    }
                </div>
                <div class="nav-item px-3">
                    @if (Navigation.ToBaseRelativePath(Navigation.Uri).StartsWith("Account"))
                    {
                        <NavLink class="mud-nav-link mud-nav-link-text" href="Account/Login">
                            <MudText Typo="Typo.button">Register</MudText>
                        </NavLink>
                    }
                    else
                    {
                        <MudNavLink OnClick="@(() => Navigation.NavigateTo("Account/Login", true))">
                            <MudText Typo="Typo.button">Login</MudText>
                        </MudNavLink>
                    }
                </div>
            </NotAuthorized>
        </AuthorizeView>
        <MudToggleIconButton
            @bind-Toggled="@_isDarkMode"
            Icon="@Icons.Material.Filled.DarkMode"
            Color="@Color.Inherit"
            ToggledIcon="@Icons.Material.Filled.LightMode"
            ToggledColor="@Color.Default"
            Class="ma-4" />
    </MudAppBar>
    <MudMainContent>
        <CascadingValue Value="@_mudThemeProvider">
            @Body
        </CascadingValue>
    </MudMainContent>
</MudLayout>

@code {
    private MudThemeProvider? _mudThemeProvider;

    private MudTheme _theme = new();
    private bool _isDarkMode = false;
}
